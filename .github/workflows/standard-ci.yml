name: Quality Assurance & Master Image

on:
  push:
    branches: [ "*" ]
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - reopened
  workflow_call:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unitTesting:
    name: Unit Testing
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 24.6.0
        uses: actions/setup-node@v4
        with:
          node-version: '24.6.0'
          cache: 'npm'
      - run: npm ci
      - run: npm -w backend run test

  lint:
    name: Linter
    runs-on: ubuntu-latest

    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 24.6.0
        uses: actions/setup-node@v4
        with:
          node-version: '24.6.0'
          cache: 'npm'
      - run: npm ci
      - run: npm -w backend run lint --if-present
      - run: npm -w client run lint --if-present

  clientTesting:
    name: Client Testing
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 24.6.0
        uses: actions/setup-node@v4
        with:
          node-version: '24.6.0'
          cache: 'npm'
      - run: npm ci

      # Generate GraphQL schema from backend
      - name: Generate GraphQL schema
        run: npm -w backend run generate-schema

      # Generate GraphQL types for client
      - name: Generate GraphQL types
        run: CI=true npm run codegen

      # Run client tests
      - run: npm -w client run test --if-present

  buildValidation:
    name: Build Validation
    runs-on: ubuntu-latest
    needs: [unitTesting, lint]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 24.6.0
        uses: actions/setup-node@v4
        with:
          node-version: '24.6.0'
          cache: 'npm'
      - run: npm ci

      # Build backend first
      - name: Build backend
        run: npm -w backend run build

      # Generate GraphQL schema from backend
      - name: Generate GraphQL schema
        run: npm -w backend run generate-schema

      # Generate GraphQL types for client
      - name: Generate GraphQL types
        run: CI=true npm run codegen

      # Build client
      - name: Build client
        run: npm -w client run build

  createAndPushDevImage:
    name: Build and push purrito:dev to dockerhub
    needs: [unitTesting, lint, clientTesting, buildValidation]
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up Node.js 24.6.0
        uses: actions/setup-node@v4
        with:
          node-version: '24.6.0'
          cache: 'npm'

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/purrito:dev
