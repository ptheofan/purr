# Host and Port for the server
PORT=3000
HOST=http://localhost

# Put.io API credentials
# You can create the following properties for your account at https://app.put.io/oauth
PUTIO_CLIENT_ID=1234
PUTIO_AUTH=xxx
PUTIO_CLIENT_SECRET=xxx

# Enable watching and scanning paths for uploads
WATCHER_ENABLED=true
# Watch dirs, watch the directory for new files and upload them to put.io item id
# Format: /path/to/dir;putio_item_id
# Can put multiple dirs, separated by a colon
# Format: /path/to/dir:putio_item_id;/path/to/dir:putio_item_id
WATCHER_TARGETS=xxx:123

# Enable downloading files from put.io automatically
DOWNLOADER_ENABLED=true
# Download dirs, watch for ready downloads at put.io and retrieve the files to the local directory
# Format: /path/to/dir;putio_item_id
# Can put multiple dirs, separated by a colon
# Format: /path/to/dir:putio_item_id;/path/to/dir:putio_item_id
DOWNLOADER_TARGETS=xxx:123

# Connect to the put.io API using a socket connection and monitor
# in realtime for changes
PUTIO_ENABLE_SOCKET=true

# If your server is accessible from outside, you can enable webhooks
# to receive notifications from put.io such as download is ready, etc.
PUTIO_ENABLE_WEBHOOKS=false

# You can schedule a check for new files in put.io using cronjob syntax
# To disable the scheduler, set this to false
# Examples:
# every hour at 0 minutes: 0 * * * * *
# every hour: */60 * * * * *
# every minute: */1 * * * * *
PUTIO_CHECK_CRON_SCHEDULE="*/60 * * * * *"

# If you want to check for new files at startup, set this to true
# This will capture all existing pending files and start downloading them
# immediately. If you do not want to download pre-existing files, set this to false
PUTIO_CHECK_AT_STARTUP=true
